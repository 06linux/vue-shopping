{"version":3,"sources":["webpack:///static/js/app.d118f0e2fca195b7935a.js","webpack:///webpack/bootstrap 93291a7352dd20d0b40b","webpack:///./src/app.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./~/vue-resource/src/util.js","webpack:///./~/vue-resource/src/promise.js","webpack:///./src/app.vue","webpack:///./~/Vue/dist/vue.common.js","webpack:///./src/routers.js","webpack:///app.vue","webpack:///loading.vue","webpack:///login.vue?0f13","webpack:///register.vue","webpack:///index.vue?9538","webpack:///./src/app.vue?63fe","webpack:///./src/components/loading.vue?5d2f","webpack:///./src/views/404.vue?2816","webpack:///./src/views/login.vue?e355","webpack:///./src/views/register.vue?ae8f","webpack:///./src/views/usercenter/index.vue?5af9","webpack:///./src/components/loading.vue","webpack:///./src/views/404.vue","webpack:///./src/views/login.vue","webpack:///./src/views/register.vue","webpack:///./src/views/usercenter/index.vue","webpack:///./~/vue-resource/src/http/before.js","webpack:///./~/vue-resource/src/http/client/index.js","webpack:///./~/vue-resource/src/http/client/jsonp.js","webpack:///./~/vue-resource/src/http/client/xdr.js","webpack:///./~/vue-resource/src/http/client/xhr.js","webpack:///./~/vue-resource/src/http/cors.js","webpack:///./~/vue-resource/src/http/header.js","webpack:///./~/vue-resource/src/http/index.js","webpack:///./~/vue-resource/src/http/interceptor.js","webpack:///./~/vue-resource/src/http/jsonp.js","webpack:///./~/vue-resource/src/http/method.js","webpack:///./~/vue-resource/src/http/mime.js","webpack:///./~/vue-resource/src/http/timeout.js","webpack:///./~/vue-resource/src/index.js","webpack:///./~/vue-resource/src/lib/promise.js","webpack:///./~/vue-resource/src/lib/url-template.js","webpack:///./~/vue-resource/src/resource.js","webpack:///./~/vue-resource/src/url/index.js","webpack:///./~/vue-resource/src/url/legacy.js","webpack:///./~/vue-resource/src/url/query.js","webpack:///./~/vue-resource/src/url/root.js","webpack:///./~/vue-resource/src/url/template.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue-toast-mobile/lib/index.js","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","parentJsonpFunction","window","chunkIds","moreModules","chunkId","i","callbacks","length","installedChunks","push","apply","shift","1","e","callback","undefined","head","document","getElementsByTagName","script","createElement","type","charset","async","src","p","0","2","3","4","5","6","7","8","9","10","11","appendChild","m","c","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_vueRouter","_vueRouter2","_vueResource","_vueResource2","_app","_app2","_vueToastMobile","_vueToastMobile2","Toast","use","configPath","http","options","headers","Content-Type","emulateJSON","config","debug","router","hashbang","history","saveScrollPosition","transitionOnLoad","linkActiveClass","start","list","toString","result","this","item","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","fn","memo","arguments","isOldIE","test","navigator","userAgent","toLowerCase","newList","mayRemove","textStore","replacement","filter","Boolean","merge","target","source","deep","key","_","isPlainObject","isArray","array","console","warn","msg","warning","silent","error","trim","str","replace","toLower","Array","isString","val","isFunction","isObject","Object","getPrototypeOf","prototype","$vm","$options","each","iterator","hasOwnProperty","defaults","extend","args","slice","forEach","arg","Promise","executor","context","PromiseObj","promise","all","iterable","resolve","value","reject","reason","race","then","fulfilled","rejected","success","response","data","status","always","cb","__vue_script__","__vue_template__","template","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","ret","to","from","keys","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","timestamp","later","last","Date","now","setTimeout","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","match","filterTokenRE","name","map","processFilterArg","dir","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","documentElement","parent","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","isIos","isWechat","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","newer","older","returnEntry","freeze","defineProperties","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","/","/home","reslove","__WEBPACK_AMD_REQUIRE_ARRAY__","/timelimit","/markets/goods","/goods/:mt/:type","/catelist/:mt","/catedetail/:mt","/order","/orderlist","/address","/usercenter","/cart","/chat","/login","/register","*","redirect","beforeEach","afterEach","_loading","_loading2","loading","effect","routeList","Loading","route","_self","$route","app","deactivate","degindex","phone","verification","getCode","alertFuc","message","position","duration","degImage","transform","getAjax","successCallback","errorCallback","$http","request","beforeSend","parseHeaders","row","xhrClient","client","ok","random","substr","jsonp","url","onload","onerror","xdr","XDomainRequest","abort","responseText","statusText","onabort","ontimeout","onprogress","send","xhr","XMLHttpRequest","getAllResponseHeaders","upload","header","setRequestHeader","crossOrigin","requestUrl","protocol","originUrl","xdrClient","xhrCors","location","href","emulateHTTP","common","custom","Http","Client","interceptors","interceptor","jsonType","post","patch","Accept","X-Requested-With","when","jsonpClient","clearTimeout","resource","$url","$resource","$promise","state","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","TypeError","onResolved","onRejected","expand","variables","tmpl","expanded","vars","operators","operator","values","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURI","Resource","opts","Url","transforms","serialize","plain","ie","documentMode","root","escape","port","hostname","pathname","encodeUriSegment","encodeUriQuery","spaces","slash","urlParams","UrlTemplate","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","len","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","stack","pop","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","deactivateQueue","reverseDeactivateQueue","reverse","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","_ref$transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","App","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","o","u","customClass","v","h","d","locals"],"mappings":"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","file":"static/js/app.d118f0e2fca195b7935a.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// install a JSONP callback for chunk loading\n/******/ \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n/******/ \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n/******/ \t\t// add \"moreModules\" to the modules object,\n/******/ \t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n/******/ \t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\tchunkId = chunkIds[i];\n/******/ \t\t\tif(installedChunks[chunkId])\n/******/ \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n/******/ \t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t}\n/******/ \t\tfor(moduleId in moreModules) {\n/******/ \t\t\tmodules[moduleId] = moreModules[moduleId];\n/******/ \t\t}\n/******/ \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n/******/ \t\twhile(callbacks.length)\n/******/ \t\t\tcallbacks.shift().call(null, __webpack_require__);\n/******/\n/******/ \t};\n/******/\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// object to store loaded and loading chunks\n/******/ \t// \"0\" means \"already loaded\"\n/******/ \t// Array means \"loading\", array contains callbacks\n/******/ \tvar installedChunks = {\n/******/ \t\t1:0\n/******/ \t};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/ \t// This file contains only the entry chunk.\n/******/ \t// The chunk loading function for additional chunks\n/******/ \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n/******/ \t\t// \"0\" is the signal for \"already loaded\"\n/******/ \t\tif(installedChunks[chunkId] === 0)\n/******/ \t\t\treturn callback.call(null, __webpack_require__);\n/******/\n/******/ \t\t// an array means \"currently loading\".\n/******/ \t\tif(installedChunks[chunkId] !== undefined) {\n/******/ \t\t\tinstalledChunks[chunkId].push(callback);\n/******/ \t\t} else {\n/******/ \t\t\t// start chunk loading\n/******/ \t\t\tinstalledChunks[chunkId] = [callback];\n/******/ \t\t\tvar head = document.getElementsByTagName('head')[0];\n/******/ \t\t\tvar script = document.createElement('script');\n/******/ \t\t\tscript.type = 'text/javascript';\n/******/ \t\t\tscript.charset = 'utf-8';\n/******/ \t\t\tscript.async = true;\n/******/\n/******/ \t\t\tscript.src = __webpack_require__.p + \"static/js/\" + chunkId + \".\" + {\"0\":\"069440db28e8bbb0d021\",\"2\":\"2dff6adea1c304314420\",\"3\":\"2dfee48930c5666b7d91\",\"4\":\"5189a76b35d585bf7c13\",\"5\":\"7a6c96f3337296445a6e\",\"6\":\"fd25ba729c4066c3fb34\",\"7\":\"a8809f94c4b63fff3fd9\",\"8\":\"b5e0c0b6c15d769ed7a0\",\"9\":\"3a5af7208c231828fbc7\",\"10\":\"9a12bab881ace3e1b725\",\"11\":\"b4af0b7c7c74de701fa6\"}[chunkId] + \".js\";\n/******/ \t\t\thead.appendChild(script);\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"http://andylei18.github.io/vue-shopping/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(214);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(212);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tvar _vueResource = __webpack_require__(203);\n\t\n\tvar _vueResource2 = _interopRequireDefault(_vueResource);\n\t\n\tvar _app = __webpack_require__(37);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tvar _vueToastMobile = __webpack_require__(213);\n\t\n\tvar _vueToastMobile2 = _interopRequireDefault(_vueToastMobile);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\twindow.Toast = _vueToastMobile2.default;\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\t_vue2.default.use(_vueResource2.default);\n\t\n\tvar configPath = '/vue-shopping/dist/mock/';\n\twindow.configPath = configPath;\n\t\n\t_vue2.default.http.options.headers = {\n\t\t'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\n\t};\n\t_vue2.default.http.options.emulateJSON = true;\n\t_vue2.default.config.debug = true;\n\t\n\tvar router = new _vueRouter2.default({\n\t\thashbang: true,\n\t\thistory: false,\n\t\tsaveScrollPosition: true,\n\t\ttransitionOnLoad: true,\n\t\tlinkActiveClass: 'nav-active' });\n\t\n\t__webpack_require__(40)(router);\n\trouter.start(_app2.default, 'app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar _ = exports, array = [], console = window.console;\n\t\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\t\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\t\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\t\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\t\n\t_.isArray = Array.isArray;\n\t\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\t\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\t\n\t_.isObject = function (obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t};\n\t\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\t\n\t_.options = function (fn, obj, options) {\n\t\n\t    options = options || {};\n\t\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\t\n\t    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n\t};\n\t\n\t_.each = function (obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t};\n\t\n\t_.defaults = function (target, source) {\n\t\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t\n\t    return target;\n\t};\n\t\n\t_.extend = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\t_.merge = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar PromiseObj = window.Promise || __webpack_require__(204);\n\t\n\tfunction Promise(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t            callback.call(this);\n\t            return value;\n\t        }, function (reason) {\n\t            callback.call(this);\n\t            return PromiseObj.reject(reason);\n\t        }\n\t    );\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 36 */,\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(103)\n\t__webpack_require__(88)\n\t__vue_script__ = __webpack_require__(41)\n\t__vue_template__ = __webpack_require__(127)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 38 */,\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.22\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  queue.length = 0;\n\t  runBatcherQueue(userQueue);\n\t  // user watchers triggered more internal watchers\n\t  if (queue.length) {\n\t    runBatcherQueue(queue);\n\t  }\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.22';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = function (router) {\n\t  router.map({\n\t    '/': {\n\t      name: 'index',\n\t      component: __webpack_require__(37)\n\t\n\t    },\n\t\n\t    '/home': {\n\t      name: 'home',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(0, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(172)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/timelimit': {\n\t      name: 'timelimit',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(4, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(186)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/markets/goods': {\n\t      name: 'markets_goods',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(3, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(179)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/goods/:mt/:type': {\n\t      name: 'goods',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(2, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(168)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/catelist/:mt': {\n\t      name: 'catelist',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(10, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(165)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/catedetail/:mt': {\n\t      name: 'catedetail',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(6, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(164)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/order': {\n\t      name: 'order',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(8, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(182)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/orderlist': {\n\t      name: 'orderlist',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(7, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(183)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/address': {\n\t      name: 'address',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(9, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(181)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/usercenter': {\n\t      name: 'usercenter',\n\t      component: __webpack_require__(189)\n\t    },\n\t\n\t    '/cart': {\n\t      name: 'cart',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(5, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(162)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/chat': {\n\t      name: 'chat',\n\t\n\t      component: function component(reslove) {\n\t        return __webpack_require__.e/* require */(11, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(163)]; (reslove.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));}.bind(this));\n\t      }\n\t    },\n\t\n\t    '/login': {\n\t      name: 'login',\n\t      component: __webpack_require__(178)\n\t    },\n\t\n\t    '/register': {\n\t      name: 'register',\n\t      component: __webpack_require__(184)\n\t    },\n\t\n\t    '*': {\n\t      name: '404error',\n\t      component: __webpack_require__(161)\n\t    }\n\t\n\t  });\n\t\n\t  router.redirect({\n\t    '/': \"/home\"\n\t  });\n\t\n\t  router.beforeEach(function (transition) {\n\t    transition.next();\n\t  });\n\t\n\t  router.afterEach(function (transition) {});\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _loading = __webpack_require__(160);\n\t\n\tvar _loading2 = _interopRequireDefault(_loading);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      loading: true,\n\t      effect: 'fade',\n\t      routeList: [] };\n\t  },\n\t\n\t  components: {\n\t    Loading: _loading2.default\n\t  }\n\t};\n\n/***/ },\n/* 42 */,\n/* 43 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  props: ['show']\n\t};\n\n/***/ },\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {};\n\t  },\n\t\n\t  components: {},\n\t  route: {\n\t    data: function data(transition) {\n\t      var _self = this;\n\t\n\t      _self.$route.router.app.loading = false;\n\t    },\n\t    deactivate: function deactivate(transition) {\n\t      transition.next();\n\t    }\n\t  },\n\t  methods: {}\n\t};\n\n/***/ },\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t\n\tvar degindex = 0;\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      phone: '',\n\t      verification: ''\n\t    };\n\t  },\n\t\n\t  components: {},\n\t  route: {\n\t    data: function data(transition) {\n\t      var _self = this;\n\t\n\t      _self.$route.router.app.loading = false;\n\t    },\n\t    deactivate: function deactivate(transition) {\n\t      transition.next();\n\t    }\n\t  },\n\t  methods: {\n\t    getCode: function getCode() {\n\t      var _this = this;\n\t\n\t      var text = this.phone;\n\t\n\t      var alertFuc = function alertFuc() {\n\t\n\t        Toast({\n\t          message: '请输入正确得手机号码!',\n\t          position: 'middle',\n\t          duration: 3000\n\t        });\n\t\n\t        _this.phone = '';\n\t        return false;\n\t      };\n\t\n\t      if (text.trim()) {\n\t\n\t        if (!/^1[3|4|5|7|8]\\d{9}$/.test(text)) {\n\t          alertFuc();\n\t        } else {\n\t          console.log(\"ok\");\n\t        }\n\t      } else {\n\t\n\t        alertFuc();\n\t      }\n\t    },\n\t    degImage: function degImage(e) {\n\t\n\t      degindex = degindex + 90;\n\t\n\t      console.log(e);\n\t\n\t      e.target.style.transform = 'rotate(' + degindex + 'deg)';\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  data: function data() {\n\t    return {};\n\t  },\n\t\n\t  components: {},\n\t  route: {\n\t    data: function data(transition) {\n\t      var self = this;\n\t\n\t      self.getAjax(transition);\n\t    },\n\t    deactivate: function deactivate(transition) {\n\t      transition.next();\n\t    }\n\t  },\n\t  methods: {\n\t    getAjax: function getAjax(transition) {\n\t      var self = this;\n\t      var successCallback = function successCallback(response) {\n\t        var jsondata = response.data;\n\t        self.$route.router.app.loading = false;\n\t      };\n\t      var errorCallback = function errorCallback(json) {};\n\t      var data = {\n\t        id: '001'\n\t      };\n\t      var options = {\n\t        name: 'lei'\n\t      };\n\t      self.$http.get(configPath + 'home.json', [data]).then(successCallback, errorCallback);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */,\n/* 72 */,\n/* 73 */,\n/* 74 */,\n/* 75 */,\n/* 76 */,\n/* 77 */,\n/* 78 */,\n/* 79 */,\n/* 80 */,\n/* 81 */,\n/* 82 */,\n/* 83 */,\n/* 84 */,\n/* 85 */,\n/* 86 */,\n/* 87 */,\n/* 88 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 89 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */,\n/* 98 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 99 */,\n/* 100 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 101 */,\n/* 102 */,\n/* 103 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 104 */,\n/* 105 */,\n/* 106 */,\n/* 107 */,\n/* 108 */,\n/* 109 */,\n/* 110 */,\n/* 111 */,\n/* 112 */,\n/* 113 */,\n/* 114 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 115 */,\n/* 116 */,\n/* 117 */,\n/* 118 */,\n/* 119 */,\n/* 120 */,\n/* 121 */,\n/* 122 */,\n/* 123 */,\n/* 124 */,\n/* 125 */,\n/* 126 */,\n/* 127 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=web-app> <loading :show=loading></loading> <router-view class=ui-view keep-alive :transition=effect transition-mode=out-in></router-view> </div>\";\n\n/***/ },\n/* 128 */,\n/* 129 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=BP_Loading class=ui-loading-wrap v-show=show><p class=mask><span></span></p></div>\";\n\n/***/ },\n/* 130 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=main> <div class=not-found> <img src=http://echarts.baidu.com/images/404.png alt=404> <div class=text>非常抱歉，您所访问的网页找不到了！您可以选择 <a href=javascript:; class=link v-link=\\\"{name:'home'}\\\">返回首页</a> </div> </div> </div>\";\n\n/***/ },\n/* 131 */,\n/* 132 */,\n/* 133 */,\n/* 134 */,\n/* 135 */,\n/* 136 */,\n/* 137 */,\n/* 138 */,\n/* 139 */,\n/* 140 */,\n/* 141 */,\n/* 142 */,\n/* 143 */,\n/* 144 */,\n/* 145 */,\n/* 146 */,\n/* 147 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ui-app with-header\\\"> <header id=BP_headBar class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>登录</p> <span class=badge v-link=\\\"{name:'register'}\\\">立即注册</span> </header> <div id=views> <div class=user_content> <div class=login_third> <div class=login_third_btn> <a href=javascript:void(0); class=\\\"js-third-login qq third_login\\\"></a> <a href=javascript:void(0); class=\\\"js-third-login sina third_login\\\"></a> </div> </div> <div class=\\\"login_title mgj\\\"> <span class=third_title>蘑菇街账号登录</span> </div> <div class=form_wrap> <div class=\\\"form_mod_wrap mb15\\\"> <div class=form_mod> <div> <input type=text class=\\\"js-uname userselect text\\\" placeholder=昵称/邮箱/手机号> </div> </div> <div class=form_mod> <div> <input type=password class=\\\"js-pwd userselect text\\\" placeholder=密码> </div> </div> </div> <div class=js-captcha-container></div> <div class=login_show> <span class=login_btn id=J_login_btn>登录</span> </div> </div> <p class=clearfix> <a href=javascript:void(0); class=\\\"overseaslogin login_idea fl\\\">全球手机登录</a> <a href=javascript:void(0); class=\\\"findpwd login_idea fr\\\">忘记密码?</a> </p> <p class=copyright>©2015 Mogujie.com 杭州卷瓜网络有限公司</p> </div> </div> </div>\";\n\n/***/ },\n/* 148 */,\n/* 149 */,\n/* 150 */,\n/* 151 */,\n/* 152 */,\n/* 153 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ui-app with-header\\\"> <header id=BP_headBar class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>注册</p> <span class=badge v-link=\\\"{name:'login'}\\\">已有账号</span> </header> <div id=views> <div id=user-register class=user-content> <div class=form-wrap> <div class=form-group> <div class=area-text>国家与地区</div> <input type=text class=\\\"input area-value js-area-code\\\" value=中国 readonly=true> <a class=\\\"js-select-area area-arrow\\\" href=javascript:void(0);></a> </div> <div class=form-group> <div class=plus>+</div> <input type=text class=\\\"input areacode\\\" value=86> <input type=tel class=\\\"input phone-number js-phone-number\\\" placeholder=手机号 v-model=phone> </div> <div class=js-captcha-container> <div class=form_check> <p class=check_notice> <span>翻转至正确方向</span> <a href=javascript:; class=change_capture>换一组</a> </p> <div class=\\\"check_img clearfix\\\" data-captkey=y7pqm1pdrav2> <div class=\\\"img_div transition\\\" data-num=0 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f0 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=1 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f1 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=2 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f2 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=3 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f3 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> </div> </div> </div> <div class=form-group> <input type=text class=\\\"js-msg-validate input msg-validate\\\" placeholder=请输入短信验证码 v-model=verification> <div class=\\\"js-msg-btn msg-btn\\\" @click=getCode>获取验证码</div> <div class=\\\"js-left-container left-time hide\\\"> <span class=js-left-time></span>秒后重发 </div> </div> <div class=\\\"js-regist-btn confirm-btn\\\">立即注册</div> <a class=tip href=/service>* 注册代表同意《蘑菇街网络服务使用协议》</a> </div> </div> </div> </div>\";\n\n/***/ },\n/* 154 */,\n/* 155 */,\n/* 156 */,\n/* 157 */,\n/* 158 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"ui-app with-header\\\"> <header class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>个人中心</p> <span class=\\\"badge icon-uniE810 badge-car\\\" v-link=\\\"{name:'cart'}\\\"></span> </header> <div id=views> <div class=wrap> <header class=hd> <div class=avaterbox> <div class=\\\"r r1\\\"> <div class=\\\"r r2\\\"> <div class=\\\"r r3\\\"> <div class=\\\"r r4\\\"> <img src=http://s22.mogucdn.com/p1/160511/upload_ifrdsmjqgm2wcnjxhazdambqmeyde_40x40.jpg_100x100.jpg alt=\\\"\\\" class=avater> </div> </div> </div> </div> </div> <div class=namecard> <h2 class=tt>aNdy200509<span class=\\\"lv lv0\\\"></span></h2> <p class=subtt><span class=mbean>蘑豆 0</span> <span class=coupon>现金券 0</span></p> </div> </header> <ul class=\\\"modlist mb15 nobdt hasarrow\\\"> <li><a href=\\\"../trade/order/list?orderStatus=all\\\">全部订单</a></li> <li class=\\\"operate clearfix\\\"> <a href=\\\"../trade/order/list?orderStatus=created\\\" class=ic><span class=\\\"icon icon-pay\\\"></span>待付款</a> <a href=\\\"../trade/order/list?orderStatus=unshipped_and_unreceived\\\" class=ic><span class=\\\"icon ic-truck icon-truck\\\"></span>待收货</a> <a href=\\\"../trade/order/list?orderStatus=received_and_completed\\\" class=ic><span class=\\\"icon icon-edit\\\"></span>待评价</a> <a href=\\\"../trade/order/list?orderStatus=refund_orders\\\" class=ic><span class=\\\"icon icon-refund\\\"></span>售后</a> </li> </ul> <ul class=\\\"modlist hasarrow\\\"> <li><a href=pay/bindlist data-navigate=true>我的银行卡</a></li> <li><a href=\\\"/x5/u/coupon?sfrom=x6/u/14vwmi8\\\">我的优惠</a></li> <li><a href=\\\"/x5/u/14vwmi8/fav?sfrom=x6/u/14vwmi8\\\">我的喜欢</a></li> <li><a data-navigate=true href=u/14vwmi8/shops>我关注的店铺</a></li><li><a href=\\\"/x5/u/14vwmi8/followList?sfrom=x6/u/14vwmi8\\\">我关注的达人</a></li> </ul> <ul class=\\\"modlist hasarrow\\\"> <li><a href=\\\"/x5/infocenter/atme?sfrom=x6/u/14vwmi8\\\">消息通知</a></li> <li><a data-navigate=true href=trade/address>收货地址</a></li> <li><a href=\\\"/x/im/?imver=1.0&amp;show_header=x6#chat/b14ejg%23101\\\">官方客服</a></li> <li><a href=\\\"/x5/feedback?sfrom=x6/u/14vwmi8\\\">意见反馈</a></li> </ul> <input type=button id=M_logout class=logout value=退出登录> </div> </div> </div>\";\n\n/***/ },\n/* 159 */,\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(89)\n\t__vue_script__ = __webpack_require__(43)\n\t__vue_template__ = __webpack_require__(129)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 161 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(90)\n\t__vue_template__ = __webpack_require__(130)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */,\n/* 168 */,\n/* 169 */,\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(35)\n\t__webpack_require__(98)\n\t__vue_script__ = __webpack_require__(57)\n\t__vue_template__ = __webpack_require__(147)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */,\n/* 184 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(35)\n\t__webpack_require__(100)\n\t__vue_script__ = __webpack_require__(63)\n\t__vue_template__ = __webpack_require__(153)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 185 */,\n/* 186 */,\n/* 187 */,\n/* 188 */,\n/* 189 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(114)\n\t__vue_script__ = __webpack_require__(67)\n\t__vue_template__ = __webpack_require__(158)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 190 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (_.isFunction(request.beforeSend)) {\n\t            request.beforeSend.call(this, request);\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 191 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(9);\n\tvar xhrClient = __webpack_require__(194);\n\t\n\tmodule.exports = function (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t\n\t};\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {}, value, name, i;\n\t\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\n\n/***/ },\n/* 192 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(9);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({type: 'cancel'});\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function (event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n\n/***/ },\n/* 193 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(9);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 194 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(9);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 195 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar xdrClient = __webpack_require__(193);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.crossOrigin === null) {\n\t            request.crossOrigin = crossOrigin(request);\n\t        }\n\t\n\t        if (request.crossOrigin) {\n\t\n\t            if (!xhrCors) {\n\t                request.client = xdrClient;\n\t            }\n\t\n\t            request.emulateHTTP = false;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n\t}\n\n\n/***/ },\n/* 196 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        request.method = request.method.toUpperCase();\n\t        request.headers = _.extend({}, _.http.headers.common,\n\t            !request.crossOrigin ? _.http.headers.custom : {},\n\t            _.http.headers[request.method.toLowerCase()],\n\t            request.headers\n\t        );\n\t\n\t        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n\t            _.extend(request.params, request.data);\n\t            delete request.data;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 197 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Client = __webpack_require__(191);\n\tvar Promise = __webpack_require__(9);\n\tvar interceptor = __webpack_require__(198);\n\tvar jsonType = {'Content-Type': 'application/json'};\n\t\n\tfunction Http(url, options) {\n\t\n\t    var client = Client, request, promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, this.$vm)(client);\n\t    }, this);\n\t\n\t    options = _.isObject(url) ? url : _.extend({url: url}, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise.reject(response);\n\t\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\t\n\t        return Promise.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.interceptors = [\n\t    __webpack_require__(190),\n\t    __webpack_require__(202),\n\t    __webpack_require__(199),\n\t    __webpack_require__(200),\n\t    __webpack_require__(201),\n\t    __webpack_require__(196),\n\t    __webpack_require__(195)\n\t];\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: {'Accept': 'application/json, text/plain, */*'},\n\t    custom: {'X-Requested-With': 'XMLHttpRequest'}\n\t};\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, _.extend({method: method, data: data, success: success}, options));\n\t    };\n\t});\n\t\n\tmodule.exports = _.http = Http;\n\n\n/***/ },\n/* 198 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(9);\n\t\n\tmodule.exports = function (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n\n/***/ },\n/* 199 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tvar jsonpClient = __webpack_require__(192);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            request.client = jsonpClient;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 200 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t            request.headers['X-HTTP-Method-Override'] = request.method;\n\t            request.method = 'POST';\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 201 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateJSON && _.isPlainObject(request.data)) {\n\t            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            request.data = _.url.params(request.data);\n\t        }\n\t\n\t        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n\t            delete request.headers['Content-Type'];\n\t        }\n\t\n\t        if (_.isPlainObject(request.data)) {\n\t            request.data = JSON.stringify(request.data);\n\t        }\n\t\n\t        return request;\n\t    },\n\t\n\t    response: function (response) {\n\t\n\t        try {\n\t            response.data = JSON.parse(response.data);\n\t        } catch (e) {}\n\t\n\t        return response;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 202 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tmodule.exports = function () {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t\n\t        request: function (request) {\n\t\n\t            if (request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    request.cancel();\n\t                }, request.timeout);\n\t            }\n\t\n\t            return request;\n\t        },\n\t\n\t        response: function (response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return response;\n\t        }\n\t\n\t    };\n\t};\n\n\n/***/ },\n/* 203 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction install(Vue) {\n\t\n\t    var _ = __webpack_require__(3);\n\t\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\t\n\t    Vue.url = __webpack_require__(207);\n\t    Vue.http = __webpack_require__(197);\n\t    Vue.resource = __webpack_require__(206);\n\t    Vue.Promise = __webpack_require__(9);\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, this);\n\t                }.bind(this);\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (window.Vue) {\n\t    Vue.use(install);\n\t}\n\t\n\tmodule.exports = install;\n\n\n/***/ },\n/* 204 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING  = 2;\n\t\n\tfunction Promise(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0, result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.notify = function notify() {\n\t    var promise = this;\n\t\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 205 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\texports.expand = function (url, params, variables) {\n\t\n\t    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t};\n\t\n\texports.parse = function (template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null, values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\t\n\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t    var value = context[key], result = [];\n\t\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\t\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\t\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\t\n\texports.encodeValue = function (operator, value, key) {\n\t\n\t    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\t\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n\n/***/ },\n/* 206 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this, resource = {};\n\t\n\t    actions = _.extend({},\n\t        Resource.actions,\n\t        actions\n\t    );\n\t\n\t    _.each(actions, function (action, name) {\n\t\n\t        action = _.merge({url: url, params: params || {}}, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = _.extend({}, action), params = {}, data, success, error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (_.isFunction(args[1])) {\n\t\n\t                if (_.isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: {method: 'GET'},\n\t    save: {method: 'POST'},\n\t    query: {method: 'GET'},\n\t    update: {method: 'PUT'},\n\t    remove: {method: 'DELETE'},\n\t    delete: {method: 'DELETE'}\n\t\n\t};\n\t\n\tmodule.exports = _.resource = Resource;\n\n\n/***/ },\n/* 207 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var options = url, transform;\n\t\n\t    if (_.isString(url)) {\n\t        options = {url: url, params: params};\n\t    }\n\t\n\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\t\n\t    return transform(options);\n\t};\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [\n\t    __webpack_require__(211),\n\t    __webpack_require__(208),\n\t    __webpack_require__(209),\n\t    __webpack_require__(210)\n\t];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [], escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\t\n\t    _.each(obj, function (value, key) {\n\t\n\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tmodule.exports = _.url = Url;\n\n\n/***/ },\n/* 208 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var variables = [], url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).\n\t        replace(/%26/gi, '&').\n\t        replace(/%3D/gi, '=').\n\t        replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).\n\t        replace(/%40/gi, '@').\n\t        replace(/%3A/gi, ':').\n\t        replace(/%24/g, '$').\n\t        replace(/%2C/gi, ',').\n\t        replace(/%20/g, (spaces ? '%20' : '+'));\n\t}\n\n\n/***/ },\n/* 209 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\t\n\t   _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = _.url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 210 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(3);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 211 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tvar UrlTemplate = __webpack_require__(205);\n\t\n\tmodule.exports = function (options) {\n\t\n\t    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 212 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 213 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e(__webpack_require__(39)):\"function\"==typeof define&&define.amd?define(\"VueToastMobile\",[\"Vue\"],e):\"object\"==typeof exports?exports.VueToastMobile=e(require(\"Vue\")):t.VueToastMobile=e(t.Vue)}(this,function(t){return function(t){function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var o={};return e.m=t,e.c=o,e.p=\"/lib/\",e(0)}([function(t,e,o){\"use strict\";function n(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]=function(t){t=t||{};var e=void 0,o=void 0,n=void 0,r=void 0;\"string\"==typeof t?(e=t,n=3e3,o=\"middle\",r=\"\"):(e=t.message,n=t.duration||3e3,o=t.position||\"middle\",r=t.className||\"\");var i=u();i.message=e,i.position=o,i.className=r,s[\"default\"].nextTick(function(){i.$appendTo(document.body),setTimeout(function(){i.$remove(),p(i)},n)})};var r=o(8),s=n(r),i=s[\"default\"].extend(o(5)),a=[],u=function(){if(a.length>0){var t=a[0];return a.splice(0,1),t}return new i({el:document.createElement(\"div\")})},p=function(t){t&&a.push(t)}},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]={props:{message:String,className:{type:String,\"default\":\"\"},position:{type:String,\"default\":\"middle\"}},computed:{customClass:function(){var t=[];switch(this.position){case\"top\":t.push(\"placetop\");break;case\"bottom\":t.push(\"placebottom\");break;default:t.push(\"placemiddle\")}return t.push(this.className),t.join(\" \")}}}},function(t,e,o){e=t.exports=o(3)(),e.push([t.id,\".toast{position:fixed;max-width:80%;border-radius:5px;background:rgba(0,0,0,.7);box-sizing:border-box;padding:10px;z-index:1001}.toast,.toast-text{color:#fff;text-align:center}.toast-text{display:block}.toast.placemiddle{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.toast.placetop{top:50px}.toast.placebottom,.toast.placetop{left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}.toast.placebottom{top:auto;bottom:50px}.toast-pop-transition{-webkit-transition:opacity .3s linear;transition:opacity .3s linear}.toast-pop-enter,.toast-pop-leave{opacity:0}\",\"\"])},function(t,e){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],e=0;e<this.length;e++){var o=this[e];o[2]?t.push(\"@media \"+o[2]+\"{\"+o[1]+\"}\"):t.push(o[1])}return t.join(\"\")},t.i=function(e,o){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var n={},r=0;r<this.length;r++){var s=this[r][0];\"number\"==typeof s&&(n[s]=!0)}for(r=0;r<e.length;r++){var i=e[r];\"number\"==typeof i[0]&&n[i[0]]||(o&&!i[2]?i[2]=o:o&&(i[2]=\"(\"+i[2]+\") and (\"+o+\")\"),t.push(i))}},t}},function(t,e){t.exports='<div class=\"toast {{customClass}}\" transition=toast-pop> <span class=toast-text>{{ message }}</span> </div>'},function(t,e,o){var n,r;o(7),n=o(1),r=o(4),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),r&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=r)},function(t,e,o){function n(t,e){for(var o=0;o<t.length;o++){var n=t[o],r=f[n.id];if(r){r.refs++;for(var s=0;s<r.parts.length;s++)r.parts[s](n.parts[s]);for(;s<n.parts.length;s++)r.parts.push(u(n.parts[s],e))}else{for(var i=[],s=0;s<n.parts.length;s++)i.push(u(n.parts[s],e));f[n.id]={id:n.id,refs:1,parts:i}}}}function r(t){for(var e=[],o={},n=0;n<t.length;n++){var r=t[n],s=r[0],i=r[1],a=r[2],u=r[3],p={css:i,media:a,sourceMap:u};o[s]?o[s].parts.push(p):e.push(o[s]={id:s,parts:[p]})}return e}function s(t,e){var o=m(),n=x[x.length-1];if(\"top\"===t.insertAt)n?n.nextSibling?o.insertBefore(e,n.nextSibling):o.appendChild(e):o.insertBefore(e,o.firstChild),x.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");o.appendChild(e)}}function i(t){t.parentNode.removeChild(t);var e=x.indexOf(t);e>=0&&x.splice(e,1)}function a(t){var e=document.createElement(\"style\");return e.type=\"text/css\",s(t,e),e}function u(t,e){var o,n,r;if(e.singleton){var s=v++;o=h||(h=a(e)),n=p.bind(null,o,s,!1),r=p.bind(null,o,s,!0)}else o=a(e),n=l.bind(null,o),r=function(){i(o)};return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else r()}}function p(t,e,o,n){var r=o?\"\":n.css;if(t.styleSheet)t.styleSheet.cssText=b(e,r);else{var s=document.createTextNode(r),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(s,i[e]):t.appendChild(s)}}function l(t,e){var o=e.css,n=e.media,r=e.sourceMap;if(n&&t.setAttribute(\"media\",n),r&&(o+=\"\\n/*# sourceURL=\"+r.sources[0]+\" */\",o+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\"),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var f={},d=function(t){var e;return function(){return\"undefined\"==typeof e&&(e=t.apply(this,arguments)),e}},c=d(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),m=d(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),h=null,v=0,x=[];t.exports=function(t,e){e=e||{},\"undefined\"==typeof e.singleton&&(e.singleton=c()),\"undefined\"==typeof e.insertAt&&(e.insertAt=\"bottom\");var o=r(t);return n(o,e),function(t){for(var s=[],i=0;i<o.length;i++){var a=o[i],u=f[a.id];u.refs--,s.push(u)}if(t){var p=r(t);n(p,e)}for(var i=0;i<s.length;i++){var u=s[i];if(0===u.refs){for(var l=0;l<u.parts.length;l++)u.parts[l]();delete f[u.id]}}}};var b=function(){var t=[];return function(e,o){return t[e]=o,t.filter(Boolean).join(\"\\n\")}}()},function(t,e,o){var n=o(2);\"string\"==typeof n&&(n=[[t.id,n,\"\"]]);o(6)(n,{});n.locals&&(t.exports=n.locals)},function(e,o){e.exports=t}])});\n\n/***/ },\n/* 214 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.22\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tisWechat: isWechat,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  queue.length = 0;\n\t  runBatcherQueue(userQueue);\n\t  // user watchers triggered more internal watchers\n\t  if (queue.length) {\n\t    runBatcherQueue(queue);\n\t  }\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if (isA || isO) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.22';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.d118f0e2fca195b7935a.js\n **/"," \t// install a JSONP callback for chunk loading\n \tvar parentJsonpFunction = window[\"webpackJsonp\"];\n \twindow[\"webpackJsonp\"] = function webpackJsonpCallback(chunkIds, moreModules) {\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, callbacks = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId])\n \t\t\t\tcallbacks.push.apply(callbacks, installedChunks[chunkId]);\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);\n \t\twhile(callbacks.length)\n \t\t\tcallbacks.shift().call(null, __webpack_require__);\n\n \t};\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// \"0\" means \"already loaded\"\n \t// Array means \"loading\", array contains callbacks\n \tvar installedChunks = {\n \t\t1:0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId, callback) {\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] === 0)\n \t\t\treturn callback.call(null, __webpack_require__);\n\n \t\t// an array means \"currently loading\".\n \t\tif(installedChunks[chunkId] !== undefined) {\n \t\t\tinstalledChunks[chunkId].push(callback);\n \t\t} else {\n \t\t\t// start chunk loading\n \t\t\tinstalledChunks[chunkId] = [callback];\n \t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\tvar script = document.createElement('script');\n \t\t\tscript.type = 'text/javascript';\n \t\t\tscript.charset = 'utf-8';\n \t\t\tscript.async = true;\n\n \t\t\tscript.src = __webpack_require__.p + \"static/js/\" + chunkId + \".\" + {\"0\":\"069440db28e8bbb0d021\",\"2\":\"2dff6adea1c304314420\",\"3\":\"2dfee48930c5666b7d91\",\"4\":\"5189a76b35d585bf7c13\",\"5\":\"7a6c96f3337296445a6e\",\"6\":\"fd25ba729c4066c3fb34\",\"7\":\"a8809f94c4b63fff3fd9\",\"8\":\"b5e0c0b6c15d769ed7a0\",\"9\":\"3a5af7208c231828fbc7\",\"10\":\"9a12bab881ace3e1b725\",\"11\":\"b4af0b7c7c74de701fa6\"}[chunkId] + \".js\";\n \t\t\thead.appendChild(script);\n \t\t}\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"http://andylei18.github.io/vue-shopping/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 93291a7352dd20d0b40b\n **/","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueResource from 'vue-resource'\nimport App from './app.vue'\n//消息提醒\nimport Toast from 'vue-toast-mobile'\nwindow.Toast = Toast\n\nVue.use(VueRouter)\nVue.use(VueResource)\n\n//配置前端请求路径\nconst configPath = '/vue-shopping/dist/mock/'\nwindow. configPath = configPath\n\nVue.http.options.headers = {\n\t'Content-Type':'application/x-www-form-urlencoded; charset=UTF-8'\n}\nVue.http.options.emulateJSON = true\nVue.config.debug = true\n\n\nconst router = new VueRouter({\n\t//abstract:true,\n\t//地址栏不会有变化\n\t//以下设置需要服务端设置\n\thashbang: true,\n\thistory: false,//当使用 HTML5 history 模式时，服务器需要被正确配置 以防用户在直接访问链接时会遇到404页面。\n\tsaveScrollPosition: true,\n\ttransitionOnLoad: true,\n\tlinkActiveClass:'nav-active' //全局设置连接匹配时的类名 参考http://vuejs.github.io/vue-router/en/link.html\n})\n\nrequire('./routers')(router);\nrouter.start(App,'app');\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 1\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 1\n **/","/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/util.js\n ** module id = 3\n ** module chunks = 1\n **/","/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/promise.js\n ** module id = 9\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./assets/styles/base.css\")\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.vue\n ** module id = 37\n ** module chunks = 1\n **/","/*!\n * Vue.js v1.0.22\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  queue.length = 0;\n  runBatcherQueue(userQueue);\n  // user watchers triggered more internal watchers\n  if (queue.length) {\n    runBatcherQueue(queue);\n  }\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.22';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Vue/dist/vue.common.js\n ** module id = 39\n ** module chunks = 1\n **/","module.exports = function(router){\n    //路由表\n    router.map({\n        //默认\n        '/':{\n            name:'index',\n            component: require('./app.vue')\n\n        },\n        //首页\n        '/home':{\n            name:'home',\n            //异步处理大量数据\n            component: function(reslove){\n                return require(['./views/home/index.vue'],reslove)\n            }\n        },\n        //限时秒杀活动模块  入口页面\n        '/timelimit':{\n          name:'timelimit',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/timelimit/index.vue'],reslove)\n          }\n        },\n        //特色市场模块  入口页面\n        '/markets/goods':{\n          name:'markets_goods',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/markets/index.vue'],reslove)\n          }\n        },\n\n        //全部商品模块页面  入口页面\n        '/goods/:mt/:type':{\n          name:'goods',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/goods/index.vue'],reslove)\n          }\n        },\n            //全部商品模块catelist页面\n            '/catelist/:mt':{\n              name:'catelist',\n              //异步处理大量数据\n              component: function(reslove){\n                return require(['./views/goods/catelist.vue'],reslove)\n              }\n            },\n            //全部商品模块catedetail页面\n            '/catedetail/:mt':{\n              name:'catedetail',\n              //异步处理大量数据\n              component: function(reslove){\n                return require(['./views/goods/catedetail.vue'],reslove)\n              }\n            },\n\n\n\n\n\n        //订单模块  入口页面\n        '/order':{\n          name:'order',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/order/index.vue'],reslove)\n          }\n        },\n         //订单列表页面\n          '/orderlist':{\n            name:'orderlist',\n            //异步处理大量数据\n            component: function(reslove){\n              return require(['./views/order/list.vue'],reslove)\n            }\n          },\n          //收货地址页面\n          '/address':{\n            name:'address',\n            //异步处理大量数据\n            component: function(reslove){\n              return require(['./views/order/address.vue'],reslove)\n            }\n          },\n\n\n\n        //个人中心模块  入口页面\n        '/usercenter':{\n          name:'usercenter',\n            component: require('./views/usercenter/index.vue')\n        },\n        //购物车模块页面  入口页面\n        '/cart':{\n          name:'cart',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/cart/index.vue'],reslove)\n          }\n        },\n\n\n\n        //私聊模块入口页面\n        '/chat':{\n          name:'chat',\n          //异步处理大量数据\n          component: function(reslove){\n            return require(['./views/chat/index.vue'],reslove)\n          }\n        },\n        // 登陆页\n        '/login': {\n          name:'login',\n          component: require('./views/login.vue')\n        },\n        // 注册页\n        '/register': {\n          name:'register',\n          component: require('./views/register.vue')\n        },\n        // 404 页\n        '*': {\n            name:'404error',\n            component: require('./views/404.vue')\n        },\n\n    });\n\n\n    //默认List主页\n    router.redirect({\n        '/':\"/home\"\n    });\n\n\n    //注册路由切换前\n    router.beforeEach(function (transition) {\n        transition.next();\n\n    });\n\n\n    //注册路由切换后\n    router.afterEach(function (transition) {\n        //console.log('成功浏览到: ' + transition.to.path)\n    });\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/routers.js\n **/","<style src=\"./assets/styles/base.css\"></style>\n<style>\n  [v-cloak]{\n    display: none;\n  }\n  .v-cloak--block,.v-cloak--inline,.v-cloak--inlineBlock{\n    display: none;\n  }\n  .ui-view {\n    min-width: 320px;\n    max-width: 750px;\n    margin-left: auto;\n    margin-right: auto;\n\n    -webkit-transition: all .3s ease;\n    transition: all .3s ease;\n  }\n\n  .fade-enter{\n    opacity: 1;\n    transform: translate3d(100%, 0, 0);\n  }\n  .fade-leave {\n    opacity: 0;\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n\n  }\n\n  .back-enter {\n    opacity: 1;\n    -webkit-transform: translate3d(-110%, 0, 0);\n    transform: translate3d(-110%, 0, 0);\n\n  }\n  .back-leave{\n    opacity: 0;\n    -webkit-transform: translate3d(0, 0, 0);\n    transform: translate3d(0, 0, 0);\n  }\n</style>\n<template>\n\n  <div class=\"web-app\">\n\n    <!-- 页面加载loading -->\n    <loading :show=\"loading\"></loading>\n\n    <!-- 缓存一级路由切换的页面 -->\n    <router-view class=\"ui-view\" keep-alive :transition=\"effect\" transition-mode=\"out-in\"></router-view>\n\n  </div>\n\n</template>\n\n<script>\n  //加载公用小组件\n  import Loading from './components/loading.vue'\n\n  export default {\n      data () {\n        return {\n          loading           : true,  //loading\n          effect            : 'fade', //路由模板动画参数\n          routeList         : [],     //访问周期中所访问了那些路径,在route.js中设置\n        }\n      },\n      components:{\n        Loading\n      }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** app.vue?3ad28ede\n **/","<style>\n  @-webkit-keyframes loadingPlus {\n    0% {\n      background-position: 0 0\n    }\n\n    10% {\n      background-position: 0 -50px\n    }\n\n    20% {\n      background-position: 0 -100px\n    }\n\n    30% {\n      background-position: 0 -150px\n    }\n\n    40% {\n      background-position: 0 -200px\n    }\n\n    50% {\n      background-position: 0 -250px\n    }\n\n    60% {\n      background-position: 0 -300px\n    }\n\n    70% {\n      background-position: 0 -350px\n    }\n\n    80% {\n      background-position: 0 -400px\n    }\n\n    90% {\n      background-position: 0 -450px\n    }\n\n    100% {\n      background-position: 0 0\n    }\n  }\n\n  @keyframes loadingPlus {\n    0% {\n      background-position: 0 0\n    }\n\n    10% {\n      background-position: 0 -50px\n    }\n\n    20% {\n      background-position: 0 -100px\n    }\n\n    30% {\n      background-position: 0 -150px\n    }\n\n    40% {\n      background-position: 0 -200px\n    }\n\n    50% {\n      background-position: 0 -250px\n    }\n\n    60% {\n      background-position: 0 -300px\n    }\n\n    70% {\n      background-position: 0 -350px\n    }\n\n    80% {\n      background-position: 0 -400px\n    }\n\n    90% {\n      background-position: 0 -450px\n    }\n\n    100% {\n      background-position: 0 0\n    }\n  }\n  .ui-loading-wrap .mask {\n    position: absolute;\n    width: 100px;\n    height: 50px;\n    left: 50%;\n    top: 50%;\n    margin-left: -50px;\n    margin-top: -25px;\n    background: url(\"../../src/assets/images/common/loading.png\") no-repeat;\n    background-size: 100px 500px;\n    -webkit-animation: loadingPlus 400ms steps(1) infinite;\n    animation: loadingPlus 400ms steps(1) infinite;\n  }\n  .ui-loading-wrap {\n    position: fixed;\n    top: 0;\n    z-index: 10000;\n    width: 100%;\n    height: 100%;\n  }\n</style>\n\n<template>\n  <div id=\"BP_Loading\" class=\"ui-loading-wrap\" v-show=\"show\"><p class=\"mask\"><span></span></p></div>\n</template>\n\n<script>\n  export default {\n    props:['show']\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** loading.vue?b00d76da\n **/","<style src=\"../../src/assets/styles/module/login.css\"></style>\n\n<style>\n\n\n\n\n  body {\n    background: #fff;\n  }\n  .form_mod {\n    padding: 0.2rem 0.4rem;\n    margin-bottom: 0.4rem;\n    font-size: 0.44rem;\n    line-height: 0.44rem;\n    /* border: 1px solid #d1d1d1; */\n    background: #f2f2f2;\n    border-radius: 3px;\n  }\n  .form_mod .text {\n    height: 0.88rem;\n    line-height: 0.88rem;\n    width: 100%;\n    -webkit-box-flex: 1;\n    display: block;\n    font-size: 0.44rem;\n    border: none;\n    color: #444;\n    background: #f2f2f2;\n  }\n  .form_mod .text::-webkit-input-placeholder {\n    color: #aeaeae;\n  }\n  .form_mod .text:-moz-placeholder {\n    color: #aeaeae;\n  }\n  .form_mod .text::-moz-placeholder {\n    color: #aeaeae;\n  }\n  .form_mod .text:-ms-input-placeholder {\n    color: #aeaeae;\n  }\n  #user_login .login_btn,\n  #user_login .regist_btn {\n    width: 100%;\n    font-size: 0.72rem;\n    height: 1.8rem;\n    line-height: 1.8rem;\n  }\n  /* 登录、注册页面 css */\n  .user_content {\n    min-width: 320px;\n  }\n  .form_wrap {\n    padding: 1rem 0.6rem 0.48rem;\n  }\n  /* 登录注册 */\n  .login_show .login_btn {\n    display: inline-block;\n    background: #ff5777;\n    color: #fff;\n    /*margin-bottom: 30rem/@size;*/\n    border: 0;\n    border-radius: 3px;\n    text-align: center;\n    text-decoration: none;\n    vertical-align: middle;\n    white-space: nowrap;\n  }\n  .login_show .sinaqq {\n    margin-bottom: 0;\n  }\n  .login_show .regist_btn {\n    background: #ecedef;\n    color: #ff5777;\n    line-height: 1.8rem;\n    border: 2px solid #ff5777;\n    padding: 0;\n  }\n  /* 第三方登录 */\n  .login_third_tiny_btn {\n    text-align: center;\n  }\n  .login_third_btn {\n    text-align: center;\n  }\n  .login_third_icon {\n    margin: 0.64rem 0 0.5rem;\n    text-align: center;\n  }\n  .login_third {\n    padding: 1.4rem 0.6rem 0;\n  }\n  .login_title {\n    padding: 1.2rem 0.6rem 0;\n  }\n  .login_third span,\n  .login_title span {\n    display: inline-block;\n    width: 100%;\n    text-align: center;\n    color: #666;\n    font-size: 0.4rem;\n    position: relative;\n  }\n  .login_third span:before,\n  .login_third span:after,\n  .login_title span:before,\n  .login_title span:after {\n    content: '';\n    width: 4.2rem;\n    border-bottom: 1px solid #d8d8d9;\n    position: absolute;\n    top: 0.4rem;\n  }\n  .mgj {\n    margin-bottom: -0.54rem;\n  }\n  .mgj span:before,\n  .mgj span:after,\n  .other span:before,\n  .other span:after {\n    width: 2.6rem;\n  }\n  .login_title span:before {\n    left: 0;\n  }\n  .login_title span:after {\n    right: 0;\n  }\n  .login_third_icon .third_login {\n    display: inline-block;\n    width: 3.64rem;\n    height: 3.64rem;\n    border-radius: 50%;\n    background: #fff url(http://www.mogujie.com/img/imgwap/loading_alpha.gif) no-repeat;\n  }\n  .login_third_btn .third_login {\n    display: inline-block;\n    width: 2.8rem;\n    height: 2.8rem;\n    border-radius: 50%;\n    margin: 0 0.5rem;\n    background: #fff url(http://www.mogujie.com/img/imgwap/loading_alpha.gif) no-repeat;\n  }\n  .login_third_btn .weixin {\n    background: url(http://s17.mogucdn.com/p1/150803/upload_ieztiyrzgaygcoddgizdambqgyyde_210x210.png) center no-repeat;\n    background-size: 100%;\n  }\n  .login_third_btn .qq {\n    /*margin-right: 110rem/@size;*/\n    background: url(http://s16.mogucdn.com/p1/150803/upload_ieztmnzwmztdsoddgizdambqgyyde_210x210.png) center no-repeat;\n    background-size: 100%;\n  }\n  /*.login_third_icon .sina{\n    background: url(http://s8.mogucdn.com/pic/150417/17ferq_ieztszjugm3dazjzgazdambqgyyde_182x182.png) center no-repeat;\n    background-size: 100%;\n  }*/\n  .login_third_btn .sina {\n    background: url(http://s18.mogucdn.com/p1/150803/upload_ie2gcmbqgaygcoddgizdambqgiyde_210x210.png) center no-repeat;\n    background-size: 100%;\n  }\n  .login_third_tiny_btn a {\n    display: inline-block;\n    width: 2.28rem;\n    height: 2.28rem;\n  }\n  .login_third_tiny_btn .qq_third_login {\n    background: url(http://s16.mogucdn.com/p1/150803/upload_ieztinrsgeygcoddgizdambqgyyde_114x114.png) 0 center no-repeat;\n    background-size: 100%;\n    margin: 0.86rem 0.34rem;\n  }\n  .login_third_tiny_btn .sina_third_login {\n    background: url(http://s18.mogucdn.com/p1/150803/upload_ie2geodcgeygcoddgizdambqgiyde_114x114.png) 0 center no-repeat;\n    background-size: 100%;\n    margin: 0.86rem 0.34rem;\n    /*margin-left: 80rem/@size;*/\n  }\n  /* 注册 */\n  .regist_show .regist_btn {\n    display: block;\n    width: 100%;\n  }\n  /*全球登录*/\n  .login_idea {\n    color: #494949;\n    font-size: 0.36rem;\n    width: 50%;\n    text-align: center;\n  }\n  .login_idea.overseaslogin {\n    border-right: solid 1px #9f9f9f;\n  }\n  .copyright {\n    font-size: 0.3rem;\n    color: #888;\n    font-family: 'micorsoft yahei';\n    text-align: center;\n    padding: 0.36rem 0;\n    border-top: 1px solid #dbdcde;\n    margin-top: 1.9rem;\n  }\n  #views .login_btn,#views .regist_btn {\n    width: 100%;\n    font-size: 0.44rem;\n    height: 1.2rem;\n    line-height: 1.2rem;\n  }\n</style>\n\n<template>\n\n  <div class=\"ui-app with-header\">\n\n    <header id=\"BP_headBar\" class=\"ui-head-bar\">\n      <a class=\"arr\" href=\"javascript:void(history.back());\">\n        <i class=\"icon-back\"></i>\n      </a>\n      <p class=\"title\">登录</p>\n      <span class=\"badge\" v-link=\"{name:'register'}\">立即注册</span>\n    </header>\n    <div id=\"views\">\n\n      <div class=\"user_content\">\n\n        <div class=\"login_third\">\n          <div class=\"login_third_btn\">\n            <a href=\"javascript:void(0);\" class=\"js-third-login qq third_login\"></a>\n            <a href=\"javascript:void(0);\" class=\"js-third-login sina third_login\"></a>\n          </div>\n        </div>\n\n        <div class=\"login_title mgj\"> <span class=\"third_title\">蘑菇街账号登录</span> </div>\n\n        <div class=\"form_wrap\">\n          <div class=\"form_mod_wrap mb15\">\n            <div class=\"form_mod\">\n              <div> <input type=\"text\" class=\"js-uname userselect text\" placeholder=\"昵称/邮箱/手机号\"> </div>\n            </div>\n            <div class=\"form_mod\">\n              <div> <input type=\"password\" class=\"js-pwd userselect text\" placeholder=\"密码\"> </div>\n            </div>\n          </div>\n          <div class=\"js-captcha-container\"></div>\n          <div class=\"login_show\">\n            <span class=\"login_btn\" id=\"J_login_btn\">登录</span>\n          </div>\n        </div>\n\n        <p class=\"clearfix\">\n          <a href=\"javascript:void(0);\" class=\"overseaslogin login_idea fl\">全球手机登录</a>\n          <a href=\"javascript:void(0);\" class=\"findpwd login_idea fr\">忘记密码?</a>\n        </p>\n\n        <p class=\"copyright\">©2015 Mogujie.com 杭州卷瓜网络有限公司</p>\n\n      </div>\n\n    </div>\n\n  </div>\n\n</template>\n\n<script>\n\n  //加载公用小组件\n  //import Mask from '../../components/mask.vue'//遮罩层组件\n\n  export default {\n    data(){\n    return {}\n\n    },\n    components: {\n\n    },\n    route: {\n      data(transition){\n        const _self = this\n\n\n        _self.$route.router.app.loading = false\n      },\n      deactivate(transition){\n        //$(window).off('scroll');\n        transition.next()\n      }\n    },\n    methods: {\n\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** login.vue?6557e3b0\n **/","<style src=\"../../src/assets/styles/module/login.css\"></style>\n<style>\n  .form-wrap {\n    padding: 0 0.3rem;\n  }\n  .form-wrap .form-group {\n    height: 1.36rem;\n    line-height: 1.36rem;\n    padding: 0 0.6rem;\n    border-bottom: 1px solid #d8d8d9;\n    background: #fff;\n    position: relative;\n    display: -webkit-box;\n  }\n  .input {\n    -webkit-box-flex: 1;\n    border: none;\n    font-size: 0.4rem;\n    color: #444;\n    height: 1rem;\n    line-height: 1rem;\n    border-radius: 0;\n  }\n  .confirm-btn {\n    margin-top: 0.6rem;\n    display: block;\n    width: 100%;\n    background: #FF5777;\n    color: #fff;\n    height: 1.2rem;\n    line-height: 1.2rem;\n    border-radius: 3px;\n    border: none;\n    font-size: 0.44rem;\n    text-align: center;\n  }\n  .tip {\n    display: block;\n    color: #666;\n    font-size: 0.36rem;\n    margin-top: 0.36rem;\n  }\n  .msg-validate {\n    text-align: left;\n    width: 5.7rem;\n    border-right: .01rem solid  #d8d8d9;\n  }\n  .msg-btn, .left-time {\n    position: absolute;\n    right: 0;\n    top: .06rem;\n    height: 1.22rem;\n    text-align: center;\n    font-size: 0.4rem;\n    line-height: 1.22rem;\n    background: #fff;\n    width: 2rem;\n  }\n  .user-content {\n    min-width: 320px;\n  }\n  .area-text {\n    height: 1.2rem;\n    position: absolute;\n    font-size: 0.4rem;\n    color: #999;\n  }\n  .area-value {\n    position: absolute;\n    top: 0;\n    right: .6rem;\n    height: 100%;\n    text-align: right;\n    color: #333;\n  }\n  .area-arrow {\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 100%;\n    width: .6rem;\n    background-image: url('http://s16.mogucdn.com/p1/151222/upload_ie4gmmzxge2gkzrzguzdambqgiyde_17x29.png');\n    background-repeat: no-repeat;\n    background-position: 100% 50%;\n    background-size: 50%;\n  }\n  .plus {\n    font-size: 0.72rem;\n    margin-right: 0.1rem;\n    line-height: 1.4rem;\n  }\n  .areacode {\n    width: 1rem;\n    border-right: 1px solid  #d8d8d9;\n  }\n  .phone-number {\n    width: 5.5rem;\n    margin-left: 0.4rem;\n  }\n  .form_check .check_notice {\n    margin: 0.4rem auto;\n    font-size: 0.4rem;\n    position: relative;\n  }\n  .form_check .check_notice a {\n    position: absolute;\n    right: 0;\n    color: #ee4566;\n  }\n  .form_check .check_notice span {\n    color: #333333;\n  }\n  .form_check .check_img {\n    margin-left: -0.22rem;\n    -webkit-user-select: none;\n  }\n  .form_check .check_img .img_div {\n    float: left;\n    width: 2.12rem;\n    height: 2.12rem;\n    margin-left: 0.22rem;\n    background-color: #fff;\n  }\n  .form_check .check_img .img_div span {\n    background-repeat: no-repeat;\n    display: block;\n    width: 2rem;\n    height: 2rem;\n    margin: 0.06rem;\n    background-size: 12rem auto;\n  }\n  .form_check .check_img .transition {\n    -webkit-transition: all 0.5s ease-in-out;\n  }\n  .form_check .check_img .f0 {\n    background-position: 0 0;\n  }\n  .form_check .check_img .f1 {\n    background-position: -3rem 0;\n  }\n  .form_check .check_img .f2 {\n    background-position: -6rem 0;\n  }\n  .form_check .check_img .f3 {\n    background-position: -9rem 0;\n  }\n</style>\n<template>\n  <div class=\"ui-app with-header\">\n    <header id=\"BP_headBar\" class=\"ui-head-bar\">\n      <a class=\"arr\" href=\"javascript:void(history.back());\">\n        <i class=\"icon-back\"></i>\n      </a>\n      <p class=\"title\">注册</p>\n      <span class=\"badge\" v-link=\"{name:'login'}\">已有账号</span>\n    </header>\n\n    <div id=\"views\">\n      <div id=\"user-register\" class=\"user-content\">\n        <div class=\"form-wrap\">\n          <div class=\"form-group\">\n            <div class=\"area-text\">国家与地区</div>\n            <input type=\"text\" class=\"input area-value js-area-code\" value=\"中国\" readonly=\"true\">\n            <a class=\"js-select-area area-arrow\" href=\"javascript:void(0);\"></a>\n           <!-- <a class=\"js-select-area area-arrow\" href=\"http://m.mogujie.com/x6/login/country\"></a>-->\n          </div>\n          <div class=\"form-group\">\n            <div class=\"plus\">+</div>\n            <input type=\"text\" class=\"input areacode\" value=\"86\">\n            <input type=\"tel\" class=\"input phone-number js-phone-number\" placeholder=\"手机号\" v-model=\"phone\"> </div>\n          <div class=\"js-captcha-container\">\n\n              <div class=\"form_check\">\n                <p class=\"check_notice\">\n                  <span>翻转至正确方向</span>\n                  <a href=\"javascript:;\" class=\"change_capture\">换一组</a>\n                </p>\n                <div class=\"check_img clearfix\" data-captkey=\"y7pqm1pdrav2\">\n                  <div class=\"img_div transition\" data-num=\"0\" data-times=\"0\" style=\"-webkit-transform: rotate(0deg);\" @click=\"degImage($event)\">\n                    <span class=\"f0\" style=\"background-image: url(../../src/assets/images/login/validate.png)\" ></span>\n                  </div>\n                  <div class=\"img_div transition\" data-num=\"1\" data-times=\"0\" style=\"-webkit-transform: rotate(0deg);\" @click=\"degImage($event)\">\n                    <span class=\"f1\" style=\"background-image: url(../../src/assets/images/login/validate.png)\"></span>\n                  </div>\n                  <div class=\"img_div transition\" data-num=\"2\" data-times=\"0\" style=\"-webkit-transform: rotate(0deg);\" @click=\"degImage($event)\">\n                    <span class=\"f2\" style=\"background-image: url(../../src/assets/images/login/validate.png)\"></span>\n                  </div> <div class=\"img_div transition\" data-num=\"3\" data-times=\"0\" style=\"-webkit-transform: rotate(0deg);\" @click=\"degImage($event)\">\n                  <span class=\"f3\" style=\"background-image: url(../../src/assets/images/login/validate.png)\"></span>\n                </div>\n                </div>\n              </div>\n\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" class=\"js-msg-validate input msg-validate\" placeholder=\"请输入短信验证码\" v-model=\"verification\">\n            <div class=\"js-msg-btn msg-btn\" @click=\"getCode\">获取验证码</div>\n            <div class=\"js-left-container left-time hide\">\n              <span class=\"js-left-time\"></span>秒后重发\n            </div>\n          </div>\n          <div class=\"js-regist-btn confirm-btn\">立即注册</div>\n          <a class=\"tip\" href=\"/service\">* 注册代表同意《蘑菇街网络服务使用协议》</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n  //加载公用小组件\n  //import Mask from '../../components/mask.vue'//遮罩层组件\n\n  let degindex = 0\n\n  export default {\n    data(){\n      return {\n        phone:'',\n        verification:'',\n      }\n    },\n    components: {\n\n    },\n    route: {\n      data(transition){\n        const _self = this\n\n\n        _self.$route.router.app.loading = false\n      },\n      deactivate(transition){\n        //$(window).off('scroll');\n        transition.next()\n      }\n    },\n    methods: {\n      //获取验证码\n      getCode(){\n        const text = this.phone\n\n        let alertFuc=()=>{\n\n              Toast({\n                message: '请输入正确得手机号码!',\n                position: 'middle',\n                duration: 3000\n              })\n\n              this.phone=''\n              return false\n        }\n\n\n        if (text.trim()) {\n\n          if(!(/^1[3|4|5|7|8]\\d{9}$/.test(text))){\n              alertFuc()\n\n          }else{\n\n            //发送验证码请求\n            console.log(\"ok\")\n\n          }\n\n        }else{\n\n          alertFuc()\n        }\n\n      },\n      degImage(e){\n\n        //const transformVal = e.target.style.transform\n\n        degindex = degindex+90\n\n        console.log(e)\n\n        e.target.style.transform = 'rotate('+ degindex +'deg)'\n\n      }\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** register.vue?20a8c931\n **/","<style src=\"../../../src/assets/styles/module/usercenter/views.css\"></style>\n\n<template>\n\t<div class=\"ui-app with-header\">\n\n\t\t<header class=\"ui-head-bar\">\n\t\t    <a class=\"arr\" href=\"javascript:void(history.back());\">\n\t\t      <i class=\"icon-back\"></i>\n\t\t    </a>\n\t\t    <p class=\"title\">个人中心</p>\n\t\t    <span class=\"badge icon-uniE810 badge-car\" v-link=\"{name:'cart'}\"></span>\n\t\t </header>\n\n\t\t <div id=\"views\">\n\t\t \t<div class=\"wrap\">\n\n\t\t \t\t<!--用户信息-->\n\t\t \t\t<header class=\"hd\">\n\t\t\t \t\t<div class=\"avaterbox\">\n\t\t\t\t \t\t<div class=\"r r1\">\n\t\t\t\t\t \t\t<div class=\"r r2\">\n\t\t\t\t\t\t \t\t<div class=\"r r3\">\n\t\t\t\t\t\t\t \t\t<div class=\"r r4\">\n\t\t\t\t\t\t\t \t\t\t<img src=\"http://s22.mogucdn.com/p1/160511/upload_ifrdsmjqgm2wcnjxhazdambqmeyde_40x40.jpg_100x100.jpg\" alt=\"\" class=\"avater\">\n\t\t\t\t\t\t\t \t\t</div>\n\t\t\t\t\t\t \t\t</div>\n\t\t\t\t\t \t\t</div>\n\t\t\t\t \t\t</div>\n\t\t\t \t\t</div>\n\t\t\t \t\t<div class=\"namecard\">\n\t\t\t\t \t\t<h2 class=\"tt\">aNdy200509<span class=\"lv lv0\"></span></h2>\n\t\t\t\t \t\t<p class=\"subtt\"><span class=\"mbean\">蘑豆 0</span> <span class=\"coupon\">现金券 0</span></p>\n\t\t\t \t\t</div>\n\t\t \t\t</header>\n\n\t\t \t\t<!--全部订单-->\n\t\t \t\t<ul class=\"modlist mb15 nobdt hasarrow\">\n\t\t \t\t\t<li><a href=\"../trade/order/list?orderStatus=all\">全部订单</a></li>\n\t\t \t\t\t<li class=\"operate clearfix\">\n\t\t \t\t\t\t<a href=\"../trade/order/list?orderStatus=created\" class=\"ic\"><span class=\"icon icon-pay\"></span>待付款</a>\n\t\t \t\t\t\t<a href=\"../trade/order/list?orderStatus=unshipped_and_unreceived\" class=\"ic\"><span class=\"icon ic-truck icon-truck\"></span>待收货</a>\n\t\t \t\t\t\t<a href=\"../trade/order/list?orderStatus=received_and_completed\" class=\"ic\"><span class=\"icon icon-edit\"></span>待评价</a>\n\t\t \t\t\t\t<a href=\"../trade/order/list?orderStatus=refund_orders\" class=\"ic\"><span class=\"icon icon-refund\"></span>售后</a>\n\t\t \t\t\t</li>\n\t\t \t\t</ul>\n\n\n\t\t \t\t<!--用户的信息拓展-->\n\t\t \t\t<ul class=\"modlist hasarrow\">\n\t\t \t\t\t<li><a href=\"pay/bindlist\" data-navigate=\"true\">我的银行卡</a></li>\n\t\t \t\t\t<li><a href=\"/x5/u/coupon?sfrom=x6/u/14vwmi8\">我的优惠</a></li>\n\t\t \t\t\t<li><a href=\"/x5/u/14vwmi8/fav?sfrom=x6/u/14vwmi8\">我的喜欢</a></li>\n\t\t \t\t\t<li><a data-navigate=\"true\" href=\"u/14vwmi8/shops\">我关注的店铺</a></li><li><a href=\"/x5/u/14vwmi8/followList?sfrom=x6/u/14vwmi8\">我关注的达人</a></li>\n\t\t \t\t</ul>\n\n\t\t \t\t<!--辅助信息-->\n\t\t \t\t<ul class=\"modlist hasarrow\">\n\t\t \t\t\t<li><a href=\"/x5/infocenter/atme?sfrom=x6/u/14vwmi8\">消息通知</a></li>\n\t\t \t\t\t<li><a data-navigate=\"true\" href=\"trade/address\">收货地址</a></li>\n\t\t \t\t\t<li><a href=\"/x/im/?imver=1.0&amp;show_header=x6#chat/b14ejg%23101\">官方客服</a></li>\n\t\t \t\t\t<li><a href=\"/x5/feedback?sfrom=x6/u/14vwmi8\">意见反馈</a></li>\n\t\t \t\t</ul>\n\n\t\t\t\t<!--退出按钮-->\n\t\t \t\t<input type=\"button\" id=\"M_logout\" class=\"logout\" value=\"退出登录\">\n\t\t \t</div>\n\t\t </div>\n\t</div>\n</template>\n\n<script>\n\n  export default {\n      data() {\n          return {\n             \n          }\n      },\n      components: {\n      },\n      route: {\n        data (transition) {\n          const self = this\n          //请求列表全部数据\n          self.getAjax(transition)\n          //滚动加载\n          //self.scrollList();\n        },\n        deactivate (transition) {\n          //$(window).off('scroll');\n          transition.next()\n        }\n      },\n      methods: {\n        //请求列表全部数据\n        getAjax(transition){\n          const self = this\n          let successCallback =(response) => {\n            const jsondata = response.data\n            self.$route.router.app.loading = false\n          \n          }\n          let errorCallback = (json)=> {\n            //console.log(json)\n          }\n          let data = {\n              id:'001'\n          }\n          let options ={\n              name:'lei'\n          }\n          self.$http.get(configPath + 'home.json', [data]).then(successCallback, errorCallback)\n\n        }\n      }\n  }\n</script>\n\n\n/** WEBPACK FOOTER **\n ** index.vue?0a7ee748\n **/","module.exports = \"<div class=web-app> <loading :show=loading></loading> <router-view class=ui-view keep-alive :transition=effect transition-mode=out-in></router-view> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/app.vue\n ** module id = 127\n ** module chunks = 1\n **/","module.exports = \"<div id=BP_Loading class=ui-loading-wrap v-show=show><p class=mask><span></span></p></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/loading.vue\n ** module id = 129\n ** module chunks = 1\n **/","module.exports = \"<div id=main> <div class=not-found> <img src=http://echarts.baidu.com/images/404.png alt=404> <div class=text>非常抱歉，您所访问的网页找不到了！您可以选择 <a href=javascript:; class=link v-link=\\\"{name:'home'}\\\">返回首页</a> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/404.vue\n ** module id = 130\n ** module chunks = 1\n **/","module.exports = \"<div class=\\\"ui-app with-header\\\"> <header id=BP_headBar class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>登录</p> <span class=badge v-link=\\\"{name:'register'}\\\">立即注册</span> </header> <div id=views> <div class=user_content> <div class=login_third> <div class=login_third_btn> <a href=javascript:void(0); class=\\\"js-third-login qq third_login\\\"></a> <a href=javascript:void(0); class=\\\"js-third-login sina third_login\\\"></a> </div> </div> <div class=\\\"login_title mgj\\\"> <span class=third_title>蘑菇街账号登录</span> </div> <div class=form_wrap> <div class=\\\"form_mod_wrap mb15\\\"> <div class=form_mod> <div> <input type=text class=\\\"js-uname userselect text\\\" placeholder=昵称/邮箱/手机号> </div> </div> <div class=form_mod> <div> <input type=password class=\\\"js-pwd userselect text\\\" placeholder=密码> </div> </div> </div> <div class=js-captcha-container></div> <div class=login_show> <span class=login_btn id=J_login_btn>登录</span> </div> </div> <p class=clearfix> <a href=javascript:void(0); class=\\\"overseaslogin login_idea fl\\\">全球手机登录</a> <a href=javascript:void(0); class=\\\"findpwd login_idea fr\\\">忘记密码?</a> </p> <p class=copyright>©2015 Mogujie.com 杭州卷瓜网络有限公司</p> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/login.vue\n ** module id = 147\n ** module chunks = 1\n **/","module.exports = \"<div class=\\\"ui-app with-header\\\"> <header id=BP_headBar class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>注册</p> <span class=badge v-link=\\\"{name:'login'}\\\">已有账号</span> </header> <div id=views> <div id=user-register class=user-content> <div class=form-wrap> <div class=form-group> <div class=area-text>国家与地区</div> <input type=text class=\\\"input area-value js-area-code\\\" value=中国 readonly=true> <a class=\\\"js-select-area area-arrow\\\" href=javascript:void(0);></a> </div> <div class=form-group> <div class=plus>+</div> <input type=text class=\\\"input areacode\\\" value=86> <input type=tel class=\\\"input phone-number js-phone-number\\\" placeholder=手机号 v-model=phone> </div> <div class=js-captcha-container> <div class=form_check> <p class=check_notice> <span>翻转至正确方向</span> <a href=javascript:; class=change_capture>换一组</a> </p> <div class=\\\"check_img clearfix\\\" data-captkey=y7pqm1pdrav2> <div class=\\\"img_div transition\\\" data-num=0 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f0 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=1 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f1 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=2 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f2 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> <div class=\\\"img_div transition\\\" data-num=3 data-times=0 style=\\\"-webkit-transform: rotate(0deg)\\\" @click=degImage($event)> <span class=f3 style=\\\"background-image: url(../../src/assets/images/login/validate.png)\\\"></span> </div> </div> </div> </div> <div class=form-group> <input type=text class=\\\"js-msg-validate input msg-validate\\\" placeholder=请输入短信验证码 v-model=verification> <div class=\\\"js-msg-btn msg-btn\\\" @click=getCode>获取验证码</div> <div class=\\\"js-left-container left-time hide\\\"> <span class=js-left-time></span>秒后重发 </div> </div> <div class=\\\"js-regist-btn confirm-btn\\\">立即注册</div> <a class=tip href=/service>* 注册代表同意《蘑菇街网络服务使用协议》</a> </div> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/register.vue\n ** module id = 153\n ** module chunks = 1\n **/","module.exports = \"<div class=\\\"ui-app with-header\\\"> <header class=ui-head-bar> <a class=arr href=javascript:void(history.back());> <i class=icon-back></i> </a> <p class=title>个人中心</p> <span class=\\\"badge icon-uniE810 badge-car\\\" v-link=\\\"{name:'cart'}\\\"></span> </header> <div id=views> <div class=wrap> <header class=hd> <div class=avaterbox> <div class=\\\"r r1\\\"> <div class=\\\"r r2\\\"> <div class=\\\"r r3\\\"> <div class=\\\"r r4\\\"> <img src=http://s22.mogucdn.com/p1/160511/upload_ifrdsmjqgm2wcnjxhazdambqmeyde_40x40.jpg_100x100.jpg alt=\\\"\\\" class=avater> </div> </div> </div> </div> </div> <div class=namecard> <h2 class=tt>aNdy200509<span class=\\\"lv lv0\\\"></span></h2> <p class=subtt><span class=mbean>蘑豆 0</span> <span class=coupon>现金券 0</span></p> </div> </header> <ul class=\\\"modlist mb15 nobdt hasarrow\\\"> <li><a href=\\\"../trade/order/list?orderStatus=all\\\">全部订单</a></li> <li class=\\\"operate clearfix\\\"> <a href=\\\"../trade/order/list?orderStatus=created\\\" class=ic><span class=\\\"icon icon-pay\\\"></span>待付款</a> <a href=\\\"../trade/order/list?orderStatus=unshipped_and_unreceived\\\" class=ic><span class=\\\"icon ic-truck icon-truck\\\"></span>待收货</a> <a href=\\\"../trade/order/list?orderStatus=received_and_completed\\\" class=ic><span class=\\\"icon icon-edit\\\"></span>待评价</a> <a href=\\\"../trade/order/list?orderStatus=refund_orders\\\" class=ic><span class=\\\"icon icon-refund\\\"></span>售后</a> </li> </ul> <ul class=\\\"modlist hasarrow\\\"> <li><a href=pay/bindlist data-navigate=true>我的银行卡</a></li> <li><a href=\\\"/x5/u/coupon?sfrom=x6/u/14vwmi8\\\">我的优惠</a></li> <li><a href=\\\"/x5/u/14vwmi8/fav?sfrom=x6/u/14vwmi8\\\">我的喜欢</a></li> <li><a data-navigate=true href=u/14vwmi8/shops>我关注的店铺</a></li><li><a href=\\\"/x5/u/14vwmi8/followList?sfrom=x6/u/14vwmi8\\\">我关注的达人</a></li> </ul> <ul class=\\\"modlist hasarrow\\\"> <li><a href=\\\"/x5/infocenter/atme?sfrom=x6/u/14vwmi8\\\">消息通知</a></li> <li><a data-navigate=true href=trade/address>收货地址</a></li> <li><a href=\\\"/x/im/?imver=1.0&amp;show_header=x6#chat/b14ejg%23101\\\">官方客服</a></li> <li><a href=\\\"/x5/feedback?sfrom=x6/u/14vwmi8\\\">意见反馈</a></li> </ul> <input type=button id=M_logout class=logout value=退出登录> </div> </div> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/usercenter/index.vue\n ** module id = 158\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./loading.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./loading.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./loading.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/loading.vue\n ** module id = 160\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./404.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./404.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/404.vue\n ** module id = 161\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!../../src/assets/styles/module/login.css\")\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./login.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./login.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./login.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/login.vue\n ** module id = 178\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!../../src/assets/styles/module/login.css\")\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./register.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./register.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./register.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/register.vue\n ** module id = 184\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../../node_modules/vue-loader/lib/style-rewriter.js!../../../src/assets/styles/module/usercenter/views.css\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/views/usercenter/index.vue\n ** module id = 189\n ** module chunks = 1\n **/","/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/before.js\n ** module id = 190\n ** module chunks = 1\n **/","/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/index.js\n ** module id = 191\n ** module chunks = 1\n **/","/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/jsonp.js\n ** module id = 192\n ** module chunks = 1\n **/","/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xdr.js\n ** module id = 193\n ** module chunks = 1\n **/","/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xhr.js\n ** module id = 194\n ** module chunks = 1\n **/","/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/cors.js\n ** module id = 195\n ** module chunks = 1\n **/","/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/header.js\n ** module id = 196\n ** module chunks = 1\n **/","/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/index.js\n ** module id = 197\n ** module chunks = 1\n **/","/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/interceptor.js\n ** module id = 198\n ** module chunks = 1\n **/","/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/jsonp.js\n ** module id = 199\n ** module chunks = 1\n **/","/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/method.js\n ** module id = 200\n ** module chunks = 1\n **/","/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/mime.js\n ** module id = 201\n ** module chunks = 1\n **/","/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/timeout.js\n ** module id = 202\n ** module chunks = 1\n **/","/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/index.js\n ** module id = 203\n ** module chunks = 1\n **/","/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/promise.js\n ** module id = 204\n ** module chunks = 1\n **/","/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/url-template.js\n ** module id = 205\n ** module chunks = 1\n **/","/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/resource.js\n ** module id = 206\n ** module chunks = 1\n **/","/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/index.js\n ** module id = 207\n ** module chunks = 1\n **/","/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/legacy.js\n ** module id = 208\n ** module chunks = 1\n **/","/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/query.js\n ** module id = 209\n ** module chunks = 1\n **/","/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/root.js\n ** module id = 210\n ** module chunks = 1\n **/","/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/template.js\n ** module id = 211\n ** module chunks = 1\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 212\n ** module chunks = 1\n **/","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"Vue\")):\"function\"==typeof define&&define.amd?define(\"VueToastMobile\",[\"Vue\"],e):\"object\"==typeof exports?exports.VueToastMobile=e(require(\"Vue\")):t.VueToastMobile=e(t.Vue)}(this,function(t){return function(t){function e(n){if(o[n])return o[n].exports;var r=o[n]={exports:{},id:n,loaded:!1};return t[n].call(r.exports,r,r.exports,e),r.loaded=!0,r.exports}var o={};return e.m=t,e.c=o,e.p=\"/lib/\",e(0)}([function(t,e,o){\"use strict\";function n(t){return t&&t.__esModule?t:{\"default\":t}}Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]=function(t){t=t||{};var e=void 0,o=void 0,n=void 0,r=void 0;\"string\"==typeof t?(e=t,n=3e3,o=\"middle\",r=\"\"):(e=t.message,n=t.duration||3e3,o=t.position||\"middle\",r=t.className||\"\");var i=u();i.message=e,i.position=o,i.className=r,s[\"default\"].nextTick(function(){i.$appendTo(document.body),setTimeout(function(){i.$remove(),p(i)},n)})};var r=o(8),s=n(r),i=s[\"default\"].extend(o(5)),a=[],u=function(){if(a.length>0){var t=a[0];return a.splice(0,1),t}return new i({el:document.createElement(\"div\")})},p=function(t){t&&a.push(t)}},function(t,e){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0}),e[\"default\"]={props:{message:String,className:{type:String,\"default\":\"\"},position:{type:String,\"default\":\"middle\"}},computed:{customClass:function(){var t=[];switch(this.position){case\"top\":t.push(\"placetop\");break;case\"bottom\":t.push(\"placebottom\");break;default:t.push(\"placemiddle\")}return t.push(this.className),t.join(\" \")}}}},function(t,e,o){e=t.exports=o(3)(),e.push([t.id,\".toast{position:fixed;max-width:80%;border-radius:5px;background:rgba(0,0,0,.7);box-sizing:border-box;padding:10px;z-index:1001}.toast,.toast-text{color:#fff;text-align:center}.toast-text{display:block}.toast.placemiddle{left:50%;top:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.toast.placetop{top:50px}.toast.placebottom,.toast.placetop{left:50%;-webkit-transform:translate(-50%);transform:translate(-50%)}.toast.placebottom{top:auto;bottom:50px}.toast-pop-transition{-webkit-transition:opacity .3s linear;transition:opacity .3s linear}.toast-pop-enter,.toast-pop-leave{opacity:0}\",\"\"])},function(t,e){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],e=0;e<this.length;e++){var o=this[e];o[2]?t.push(\"@media \"+o[2]+\"{\"+o[1]+\"}\"):t.push(o[1])}return t.join(\"\")},t.i=function(e,o){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var n={},r=0;r<this.length;r++){var s=this[r][0];\"number\"==typeof s&&(n[s]=!0)}for(r=0;r<e.length;r++){var i=e[r];\"number\"==typeof i[0]&&n[i[0]]||(o&&!i[2]?i[2]=o:o&&(i[2]=\"(\"+i[2]+\") and (\"+o+\")\"),t.push(i))}},t}},function(t,e){t.exports='<div class=\"toast {{customClass}}\" transition=toast-pop> <span class=toast-text>{{ message }}</span> </div>'},function(t,e,o){var n,r;o(7),n=o(1),r=o(4),t.exports=n||{},t.exports.__esModule&&(t.exports=t.exports[\"default\"]),r&&((\"function\"==typeof t.exports?t.exports.options:t.exports).template=r)},function(t,e,o){function n(t,e){for(var o=0;o<t.length;o++){var n=t[o],r=f[n.id];if(r){r.refs++;for(var s=0;s<r.parts.length;s++)r.parts[s](n.parts[s]);for(;s<n.parts.length;s++)r.parts.push(u(n.parts[s],e))}else{for(var i=[],s=0;s<n.parts.length;s++)i.push(u(n.parts[s],e));f[n.id]={id:n.id,refs:1,parts:i}}}}function r(t){for(var e=[],o={},n=0;n<t.length;n++){var r=t[n],s=r[0],i=r[1],a=r[2],u=r[3],p={css:i,media:a,sourceMap:u};o[s]?o[s].parts.push(p):e.push(o[s]={id:s,parts:[p]})}return e}function s(t,e){var o=m(),n=x[x.length-1];if(\"top\"===t.insertAt)n?n.nextSibling?o.insertBefore(e,n.nextSibling):o.appendChild(e):o.insertBefore(e,o.firstChild),x.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");o.appendChild(e)}}function i(t){t.parentNode.removeChild(t);var e=x.indexOf(t);e>=0&&x.splice(e,1)}function a(t){var e=document.createElement(\"style\");return e.type=\"text/css\",s(t,e),e}function u(t,e){var o,n,r;if(e.singleton){var s=v++;o=h||(h=a(e)),n=p.bind(null,o,s,!1),r=p.bind(null,o,s,!0)}else o=a(e),n=l.bind(null,o),r=function(){i(o)};return n(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;n(t=e)}else r()}}function p(t,e,o,n){var r=o?\"\":n.css;if(t.styleSheet)t.styleSheet.cssText=b(e,r);else{var s=document.createTextNode(r),i=t.childNodes;i[e]&&t.removeChild(i[e]),i.length?t.insertBefore(s,i[e]):t.appendChild(s)}}function l(t,e){var o=e.css,n=e.media,r=e.sourceMap;if(n&&t.setAttribute(\"media\",n),r&&(o+=\"\\n/*# sourceURL=\"+r.sources[0]+\" */\",o+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+\" */\"),t.styleSheet)t.styleSheet.cssText=o;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(o))}}var f={},d=function(t){var e;return function(){return\"undefined\"==typeof e&&(e=t.apply(this,arguments)),e}},c=d(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),m=d(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),h=null,v=0,x=[];t.exports=function(t,e){e=e||{},\"undefined\"==typeof e.singleton&&(e.singleton=c()),\"undefined\"==typeof e.insertAt&&(e.insertAt=\"bottom\");var o=r(t);return n(o,e),function(t){for(var s=[],i=0;i<o.length;i++){var a=o[i],u=f[a.id];u.refs--,s.push(u)}if(t){var p=r(t);n(p,e)}for(var i=0;i<s.length;i++){var u=s[i];if(0===u.refs){for(var l=0;l<u.parts.length;l++)u.parts[l]();delete f[u.id]}}}};var b=function(){var t=[];return function(e,o){return t[e]=o,t.filter(Boolean).join(\"\\n\")}}()},function(t,e,o){var n=o(2);\"string\"==typeof n&&(n=[[t.id,n,\"\"]]);o(6)(n,{});n.locals&&(t.exports=n.locals)},function(e,o){e.exports=t}])});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-toast-mobile/lib/index.js\n ** module id = 213\n ** module chunks = 1\n **/","/*!\n * Vue.js v1.0.22\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar isWechat = UA && UA.indexOf('micromessenger') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !(isWechat && isIos)) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tisWechat: isWechat,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  queue.length = 0;\n  runBatcherQueue(userQueue);\n  // user watchers triggered more internal watchers\n  if (queue.length) {\n    runBatcherQueue(queue);\n  }\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if (isA || isO) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.22';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 214\n ** module chunks = 1\n **/"],"sourceRoot":""}